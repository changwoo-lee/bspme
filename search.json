[{"path":"https://changwoo-lee.github.io/bspme/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 bspme authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://changwoo-lee.github.io/bspme/articles/Ozone-exposure-and-health-data-analysis.html","id":"obtain-posterior-predictive-distribution-at-health-subject-locations","dir":"Articles","previous_headings":"","what":"Obtain posterior predictive distribution at health subject locations","title":"Ozone exposure and health data analysis","text":"example, use Gaussian process obtain predictive distribution \\((X_1,\\dots,X_n)\\), ozone exposure health subject locations. posterior predictive distribution n-dimensional multivariate normal \\(N(\\mu_X, Q_X^{-1})\\), used prior health model incorporate measurement error information ozone exposure. Specifically, use exponential covariance kernel fixed range 300 (miles) standard deviation 15 (ppb). plot chunk ozone_eda3 covariance \\((X_1,\\dots,X_n)\\) contains spatial dependency information second order, inverse \\(Q_X\\) become dense matrix. comes fitting Bayesian linear model measurement error, naive implementation n-dimensional multivariate normal prior \\(N(\\mu_X, Q_X^{-1})\\) takes cubic time complexity posterior inference MCMC iteration, becomes infeasible run \\(n\\) large tens thousands.","code":"# distance calculation Dxx = rdist.earth(cbind(ozone16$coords_lon, ozone16$coords_lat)) Dyy = rdist.earth(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat)) Dxy = rdist.earth(cbind(ozone16$coords_lon, ozone16$coords_lat),                   cbind(health_sim$coords_y_lon, health_sim$coords_y_lat))  # kernel matrices Kxx = Exponential(Dxx, range = 300, phi=15^2) Kyy = Exponential(Dyy, range = 300, phi=15^2) Kxy = Exponential(Dxy, range = 300, phi=15^2)  # posterior predictive mean and covariance X_mean = t(Kxy) %*% solve(Kxx, ozone16$ozone_ppb) X_cov = Kyy - t(Kxy) %*% solve(Kxx, Kxy)  # visualization of posterior predictive distribution. Black triangle is monitoring station locations. par(mfrow = c(1,2)) quilt.plot(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),            X_mean, main = \"health subjects, mean of exposure\"); US(add= T) points(cbind(ozone16$coords_lon, ozone16$coords_lat), pch = 17)  quilt.plot(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),            sqrt(diag(X_cov)), main = \"health subjects, sd of exposure\"); US(add= T) points(cbind(ozone16$coords_lon, ozone16$coords_lat), pch = 17)"},{"path":"https://changwoo-lee.github.io/bspme/articles/Ozone-exposure-and-health-data-analysis.html","id":"run-vecchia-approximation-to-get-sparse-precision-matrix","dir":"Articles","previous_headings":"","what":"Run Vecchia approximation to get sparse precision matrix","title":"Ozone exposure and health data analysis","text":"propose use Vecchia approximation get new multivariate normal prior \\((X_1,\\dots,X_n)\\) sparse precision matrix, crucial scalable implementation health model measurement error, also time aims best preserve spatial dependency information original covariance matrix.","code":"#Run the Vecchia approximation to get the sparse precision matrix.  # Vecchia approximation run_vecchia = vecchia_cov(X_cov, coords = cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),             n.neighbors = 10) Q_sparse = run_vecchia$Q run_vecchia$cputime #> Time difference of 0.796325 secs"},{"path":"https://changwoo-lee.github.io/bspme/articles/Ozone-exposure-and-health-data-analysis.html","id":"fit-bspme-with-sparse-precision-matrix","dir":"Articles","previous_headings":"","what":"Fit bspme with sparse precision matrix","title":"Ozone exposure and health data analysis","text":"can now fit main function bspme package sparse precision matrix. took less 10 seconds (1) run Vecchia approximation (2) run MCMC algorithm total 1100 iterations. plot chunk unnamed-chunk-3","code":"# fit the model fit_me = blinreg_me(Y = health_sim$Y,               X_mean = X_mean,               X_prec = Q_sparse, # sparse precision matrix               Z = health_sim$Z,               nburn = 100,               nsave = 1000,               nthin = 1) fit_me$cputime #> Time difference of 6.17423 secs summary(fit_me$posterior) #>  #> Iterations = 1:1000 #> Thinning interval = 1  #> Number of chains = 1  #> Sample size per chain = 1000  #>  #> 1. Empirical mean and standard deviation for each variable, #>    plus standard error of the mean: #>  #>                 Mean       SD  Naive SE Time-series SE #> (Intercept) 100.0234 0.624015 0.0197331      0.0259492 #> exposure.1   -0.5021 0.007004 0.0002215      0.0003135 #> covariate.1   4.3374 0.337301 0.0106664      0.0126324 #> sigma2_Y     24.7826 0.712924 0.0225446      0.0280662 #>  #> 2. Quantiles for each variable: #>  #>                2.5%     25%      50%      75%    97.5% #> (Intercept) 98.8360 99.6014 100.0057 100.4462 101.2774 #> exposure.1  -0.5163 -0.5066  -0.5021  -0.4974  -0.4882 #> covariate.1  3.6657  4.1060   4.3402   4.5681   4.9898 #> sigma2_Y    23.3910 24.3080  24.7964  25.2340  26.1523 bayesplot::mcmc_trace(fit_me$posterior)"},{"path":"https://changwoo-lee.github.io/bspme/articles/Ozone-exposure-and-health-data-analysis.html","id":"fit-bspme-without-sparse-precision-matrix","dir":"Articles","previous_headings":"","what":"Fit bspme without sparse precision matrix","title":"Ozone exposure and health data analysis","text":"mentioned , precision matrix dense, posterior computation becomes infeasible \\(n\\) becomes large, tens thousands. See following example \\(n=3000\\). even 11 MCMC iterations, took 1 mins run MCMC algorithm. number health subject locations tens thousands, naive algorithm using dense precision matrix becomes infeasible, Vecchia approximation becomes necesssary carry inference.","code":"# fit the model, without vecchia approximation # I will only run 11 iteration for illustration purpose Q_dense = solve(X_cov) # inverting 3000 x 3000 matrix, takes some time # run fit_me_dense = blinreg_me(Y = health_sim$Y,                 X_mean = X_mean,                 X_prec = Q_dense, # dense precision                 Z = health_sim$Z,                 nburn = 1,                 nsave = 10,                 nthin = 1) fit_me_dense$cputime #> Time difference of 58.06338 secs"},{"path":"https://changwoo-lee.github.io/bspme/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Changwoo Lee. Author, maintainer. Elaine Symanski. Author. Amal Rammah. Author. Dong Hun Kang. Author. Philip Hopke. Author. Eun Sug Park. Author.","code":""},{"path":"https://changwoo-lee.github.io/bspme/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lee, J. C, Symanski E, Rammah , Kang DH, Hopke PK, Park ES (2023). “scalable two-stage Bayesian approach accounting exposure measurement error environmental epidemiology.” arXiv preprint. tobeadded.","code":"@Article{,   title = {A scalable two-stage Bayesian approach accounting for exposure measurement error in environmental epidemiology.},   year = {2023},   author = {{Lee} and Changwoo J. and Elaine Symanski and Amal Rammah and Dong Hun Kang and Philip K. Hopke and Eun Sug Park},   url = {tobeadded},   journal = {arXiv preprint}, }"},{"path":"https://changwoo-lee.github.io/bspme/index.html","id":"bspme","dir":"","previous_headings":"","what":"Bayesian Spatial Measurement Error Models","title":"Bayesian Spatial Measurement Error Models","text":"Go package website: [link] (NOTE: NOW UNPUBLISHED) See vignette ozone exposure data: [link] (NOTE: SEE “INSTALLATION” SECTION INSTEAD) bspme R package provides set functions Bayesian spatially correlated measurement error models, Bayesian linear models presence (spatially) correlated measurement error covariate(s). details, please see following paper: scalable two-stage Bayesian approach accounting exposure measurement error environmental epidemiology. Lee, C. J., Symanski, E., Rammah, ., Kang, D.H., Hopke, P., Park, E.S. (2023+). preprint (url ). illustration, consider normal linear regression model intercept, one covariate X measurement error, one covariate Z without measurement error: $$ Y_i = \\beta_0 + \\beta_x X_i + \\beta_z Z_i + \\epsilon_i, \\quad \\epsilon_i \\stackrel{iid}{\\sim} N(0, \\sigma^2_Y), \\quad =1,\\dots,n, $$ context environmental epidemiology, covariate Xi can exposure air pollution subject different locations, Zi can demographic information, Yi can associated health outcome. Since exposure Xi,  = 1, …, n directly measured health subject locations predicted air pollution monitoring station locations, induces spatially correlated measurement error Xi. Also, uncertainty information taken account, depends proximity monitoring station subject location. One way incorporate information use multivariate normal (MVN) prior covariate (X1,…,Xn) subjects, (X1,…,Xn) ∼ Nn(m,Q−1), mean m precision (inverse covariance) matrix Q, referred MVN prior approach. bspme package provides fast, scalable inference tools Bayesian spatially correlated measurement error models, measurement error information represented MVN prior distribution sparse precision matrix Q. Naive choices Q, sample precision matrix, make MCMC posterior inference algorithm infeasible run large number subjects n O(n3) computational cost associated n-dimensional MVN prior. sparse precision matrix Q obtained Vecchia approximation, bspme package offers fast, scalable algorithm conduct posterior inference large health datasets, number subjects n possibly reaching tens thousands.","code":""},{"path":"https://changwoo-lee.github.io/bspme/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Spatial Measurement Error Models","text":"can install development version bspme following code: browse see vignettes, run","code":"# install.packages(\"devtools\") # never share below token devtools::install_github(\"changwoo-lee/bspme\", auth_token = \"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\", build_vignettes = T, force= T) browseVignettes(\"bspme\")"},{"path":"https://changwoo-lee.github.io/bspme/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"Bayesian Spatial Measurement Error Models","text":"see function description R environment, run following lines:","code":"?blinreg_me ?vecchia_cov"},{"path":[]},{"path":"https://changwoo-lee.github.io/bspme/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Bayesian Spatial Measurement Error Models","text":"Please see vignette “Ozone exposure simulated health data”.","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/blinreg_me.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian normal linear regression models with correlated measurement errors — blinreg_me","title":"Bayesian normal linear regression models with correlated measurement errors — blinreg_me","text":"function implements Bayesian normal linear regression model correlated measurement error covariate(s). Denote \\(Y_i\\) continuous response, \\(X_i\\) \\(q\\times 1\\) covariate \\(\\)th observation subject measurement error, \\(Z_i\\) \\(p\\times 1\\) covariate without measurement error. likelihood model Bayesian normal linear regression, $$Y_i = \\beta_0 + X_i^\\top \\beta_x +  Z_i^\\top \\beta_z + \\epsilon_i,\\quad  \\epsilon_i \\stackrel{iid}{\\sim} N(0, \\sigma^2_Y), \\quad =1,\\dots,n$$ correlated measurement error \\(X_i, =1,\\dots,n\\) incorporated model multivariate normal prior. example \\(q=1\\), \\(n-\\)dimensional multivariate normal prior $$(X_1,\\dots,X_n)\\sim N_n(\\mu_X, Q_X^{-1}).$$ Also, consider semiconjugate priors regression coefficients noise variance; $$\\beta_0 \\sim N(0, V_\\beta), \\quad \\beta_{x,j} \\stackrel{iid}{\\sim} N(0, V_\\beta), \\quad \\beta_{z,k} \\stackrel{iid}{\\sim} N(0, V_\\beta), \\quad \\sigma_Y^2 \\sim IG(a_Y, b_Y).$$ function blinreg_me() implements Gibbs sampler posterior inference. importantly, allows sparse matrix input \\(Q_X\\) scalable computation.","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/blinreg_me.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian normal linear regression models with correlated measurement errors — blinreg_me","text":"","code":"blinreg_me(   Y,   X_mean,   X_prec,   Z,   nburn = 2000,   nsave = 2000,   nthin = 5,   prior = NULL,   saveX = F )"},{"path":"https://changwoo-lee.github.io/bspme/reference/blinreg_me.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian normal linear regression models with correlated measurement errors — blinreg_me","text":"Y n 1 matrix, response X_mean n 1 matrix mean X \\(\\mu_X\\), list n 1 matrices length q. X_prec n n matrix precision matrix X  \\(Q_X\\), list n n matrices length q. Support sparse matrix format Matrix package. Z n p matrix, covariates without measurement error nburn integer, burn-iteration nsave integer, number posterior samples nthin integer, thin-rate prior list prior parameters, default var_beta = 100,a_Y = 0.01, b_Y = 0.01 saveX logical, save X ","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/blinreg_me.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian normal linear regression models with correlated measurement errors — blinreg_me","text":"list (1) posterior, (nsave)x(q+p) matrix posterior samples coda object, (2) cputime, cpu time taken seconds, optionally (3) X_save, posterior samples X","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/blinreg_me.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian normal linear regression models with correlated measurement errors — blinreg_me","text":"","code":"if (FALSE) { data(ozone) data(health_sim) library(bspme) data(ozone) data(health_sim) library(fields) # exposure mean and covariance at health subject locations with 06/18/1987 data (date id = 16) # using Gaussian process with prior mean zero and exponential covariance kernel # with fixed range 300 (in miles) and stdev 15 (in ppb)  ozone16 = ozone[ozone$date_id==16,]  Dxx = rdist.earth(cbind(ozone16$coords_lon, ozone16$coords_lat)) Dyy = rdist.earth(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat)) Dxy = rdist.earth(cbind(ozone16$coords_lon, ozone16$coords_lat),                   cbind(health_sim$coords_y_lon, health_sim$coords_y_lat))  Kxx = Exponential(Dxx, range = 300, phi=15^2) Kyy = Exponential(Dyy, range = 300, phi=15^2) Kxy = Exponential(Dxy, range = 300, phi=15^2)  X_mean = t(Kxy) %*% solve(Kxx, ozone16$ozone_ppb) X_cov = Kyy - t(Kxy) %*% solve(Kxx, Kxy)  # visualize par(mfrow = c(1,3)) quilt.plot(cbind(ozone16$coords_lon, ozone16$coords_lat),            ozone16$ozone_ppb, main = \"ozone measurements\"); US(add= T)  quilt.plot(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),            X_mean, main = \"health subjects, mean of exposure\"); US(add= T) points(cbind(ozone16$coords_lon, ozone16$coords_lat), pch = 17)  quilt.plot(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),            sqrt(diag(X_cov)), main = \"health subjects, sd of exposure\"); US(add= T) points(cbind(ozone16$coords_lon, ozone16$coords_lat), pch = 17)  # vecchia approximation run_vecchia = vecchia_cov(X_cov, coords = cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),                           n.neighbors = 10) Q_sparse = run_vecchia$Q run_vecchia$cputime  # fit the model fit_me = blinreg_me(Y = health_sim$Y,                 X_mean = X_mean,                 X_prec = Q_sparse, # sparse precision matrix                 Z = health_sim$Z,                 nburn = 100,                 nsave = 1000,                 nthin = 1) fit_me$cputime summary(fit_me$posterior) library(bayesplot) bayesplot::mcmc_trace(fit_me$posterior) }"},{"path":"https://changwoo-lee.github.io/bspme/reference/blogireg_me.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian logistic regression models with correlated measurement errors — blogireg_me","title":"Bayesian logistic regression models with correlated measurement errors — blogireg_me","text":"function implements Bayesian logistic regression model correlated measurement error covariate(s). Denote \\(Y_i\\) binary response, \\(X_i\\) \\(q\\times 1\\) covariate \\(\\)th observation subject measurement error, \\(Z_i\\) \\(p\\times 1\\) covariate without measurement error. likelihood model Bayesian logistic regression, $$logit(Pr(Y_i = 1)) = \\beta_0 + X_i^\\top \\beta_x +  Z_i^\\top \\beta_z, \\quad =1,\\dots,n, $$ independently, correlated measurement error \\(X_i, =1,\\dots,n\\) incorporated model multivariate normal prior. example \\(q=1\\), \\(n-\\)dimensional multivariate normal prior $$(X_1,\\dots,X_n)\\sim N_n(\\mu_X, Q_X^{-1}).$$ Also, consider semiconjugate priors regression coefficients; $$\\beta_0 \\sim N(0, V_\\beta), \\quad \\beta_{x,j} \\stackrel{iid}{\\sim} N(0, V_\\beta), \\quad \\beta_{z,k} \\stackrel{iid}{\\sim} N(0, V_\\beta)$$ function blogireg_me() implements Gibbs sampler posterior inference using Polya-Gamma augmentation. importantly, allows sparse matrix input \\(Q_X\\) scalable computation.","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/blogireg_me.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian logistic regression models with correlated measurement errors — blogireg_me","text":"","code":"blogireg_me(   Y,   X_mean,   X_prec,   Z,   nburn = 2000,   nsave = 2000,   nthin = 5,   prior = NULL,   saveX = F )"},{"path":"https://changwoo-lee.github.io/bspme/reference/blogireg_me.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian logistic regression models with correlated measurement errors — blogireg_me","text":"Y n 1 matrix, binary responses X_mean n 1 matrix mean X \\(\\mu_X\\), list n 1 matrices length q. X_prec n n matrix precision matrix X  \\(Q_X\\), list n n matrices length q. Support sparse matrix format Matrix package. Z n p matrix, covariates without measurement error nburn integer, burn-iteration nsave integer, number posterior samples nthin integer, thin-rate prior list prior parameters, default var_beta = 100,a_Y = 0.01, b_Y = 0.01 saveX logical, save X ","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/blogireg_me.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian logistic regression models with correlated measurement errors — blogireg_me","text":"list (1) posterior, (nsave)x(q+p) matrix posterior samples coda object, (2) cputime, cpu time taken seconds, optionally (3) X_save, posterior samples X","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/blogireg_me.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian logistic regression models with correlated measurement errors — blogireg_me","text":"","code":"if (FALSE) { data(ozone) data(health_sim) library(bspme) data(ozone) data(health_sim) library(fields) # exposure mean and covariance at health subject locations with 06/18/1987 data (date id = 16) # using Gaussian process with prior mean zero and exponential covariance kernel # with fixed range 300 (in miles) and stdev 15 (in ppb)  ozone16 = ozone[ozone$date_id==16,]  Dxx = rdist.earth(cbind(ozone16$coords_lon, ozone16$coords_lat)) Dyy = rdist.earth(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat)) Dxy = rdist.earth(cbind(ozone16$coords_lon, ozone16$coords_lat),                   cbind(health_sim$coords_y_lon, health_sim$coords_y_lat))  Kxx = Exponential(Dxx, range = 300, phi=15^2) Kyy = Exponential(Dyy, range = 300, phi=15^2) Kxy = Exponential(Dxy, range = 300, phi=15^2)  X_mean = t(Kxy) %*% solve(Kxx, ozone16$ozone_ppb) X_cov = Kyy - t(Kxy) %*% solve(Kxx, Kxy)  # visualize par(mfrow = c(1,3)) quilt.plot(cbind(ozone16$coords_lon, ozone16$coords_lat),            ozone16$ozone_ppb, main = \"ozone measurements\"); US(add= T)  quilt.plot(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),            X_mean, main = \"health subjects, mean of exposure\"); US(add= T) points(cbind(ozone16$coords_lon, ozone16$coords_lat), pch = 17)  quilt.plot(cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),            sqrt(diag(X_cov)), main = \"health subjects, sd of exposure\"); US(add= T) points(cbind(ozone16$coords_lon, ozone16$coords_lat), pch = 17)  # vecchia approximation run_vecchia = vecchia_cov(X_cov, coords = cbind(health_sim$coords_y_lon, health_sim$coords_y_lat),                           n.neighbors = 10) Q_sparse = run_vecchia$Q run_vecchia$cputime  # fit the model fit_me = blogireg_me(Y = health_sim$Ybinary,                 X_mean = X_mean,                 X_prec = Q_sparse, # sparse precision matrix                 Z = health_sim$Z,                 nburn = 100,                 nsave = 1000,                 nthin = 1) fit_me$cputime summary(fit_me$posterior) library(bayesplot) bayesplot::mcmc_trace(fit_me$posterior) }"},{"path":"https://changwoo-lee.github.io/bspme/reference/bspme-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bspme: Bayesian Spatial Measurement Error Models — bspme-package","title":"bspme: Bayesian Spatial Measurement Error Models — bspme-package","text":"Functions fitting Bayesian linear genearlized linear models presence spatial measurement error covariates.","code":""},{"path":[]},{"path":"https://changwoo-lee.github.io/bspme/reference/bspme-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bspme: Bayesian Spatial Measurement Error Models — bspme-package","text":"Maintainer: Changwoo Lee c.lee@stat.tamu.edu Authors: Elaine Symanski Amal Rammah Dong Hun Kang Philip Hopke Eun Sug Park","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/health_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset, simulated health data — health_sim","title":"Dataset, simulated health data — health_sim","text":"Simulated health data based ozone exposures 06/18/1987. details, see health_sim.R.","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/health_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset, simulated health data — health_sim","text":"","code":"health_sim"},{"path":"https://changwoo-lee.github.io/bspme/reference/health_sim.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset, simulated health data — health_sim","text":"data frame n = 3000 rows 4 variables: Y n 1 matrix, numeric, simulated continuous health outcome Ybinary n 1 matrix, numeric, simulated binary health outcome coords_y_lon n 1 matrix, numeric, simulated health subject longitude coords_y_lat n 1 matrix, numeric, simulated health subject latitude Z n 1 matrix, numeric, covariate X_true n 1 matrix, numeric, true ozone exposure used simulation","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/ozone.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset, ozone exposure — ozone","title":"Dataset, ozone exposure — ozone","text":"subset \"ozone2\" dataset fields package, containing data monitoring station missing values. 8-hour average (surface) ozone (9AM-4PM) measured parts per billion (PPB) 67 sites midwestern US period June 3,1987 August 31, 1987, 89 days.","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/ozone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset, ozone exposure — ozone","text":"","code":"ozone"},{"path":"https://changwoo-lee.github.io/bspme/reference/ozone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset, ozone exposure — ozone","text":"data frame 5963 rows 6 variables: date_id integer, 1 corresponds 06/03/1987 89 corresponds 08/31/1987 date POIXct, date station_id character, station id coords_lon numeric, longitude monitoring station coords_lat numeric, latitude monitoring station ozone_ppb 8-hour average surface ozone 9am-4pm parts per billion (PPB)","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/vecchia_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Vecchia approximation given a covariance matrix — vecchia_cov","title":"Vecchia approximation given a covariance matrix — vecchia_cov","text":"Given multivariate normal (MVN) distribution covariance matrix \\(\\Sigma\\), function finds sparse precision matrix (inverse covariance) \\(Q\\) based Vecchia approximation, \\(N(\\mu, Q^{-1})\\) sparse MVN approximates original MVN \\(N(\\mu, \\Sigma)\\).","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/vecchia_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vecchia approximation given a covariance matrix — vecchia_cov","text":"","code":"vecchia_cov(Sigma, coords, n.neighbors, ord = NULL, KLdiv = FALSE)"},{"path":"https://changwoo-lee.github.io/bspme/reference/vecchia_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vecchia approximation given a covariance matrix — vecchia_cov","text":"Sigma n n covariance matrix coords n 2 matrix, coordinates determine neighborhood n.neighbors positive integer, number nearest neighbors construct knn graph ord length n vector, ordering data. NULL, ordering based first coordinate used. KLdiv logical, return KL divergence?","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/vecchia_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vecchia approximation given a covariance matrix — vecchia_cov","text":"list (1) Q, sparse precision matrix, (2) ord, ordering used Vecchia approximation, (3) cputime, time taken seconds, optionally (4) KLdiv, KL divergence KL(p, ptilde), p multivariate normal mean 0 covariance Sigma, ptilde multivariate normal mean 0 precision Q.","code":""},{"path":"https://changwoo-lee.github.io/bspme/reference/vecchia_cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vecchia approximation given a covariance matrix — vecchia_cov","text":"","code":"n = 1000 coords = cbind(runif(n), runif(n)) Sigma = fields::Exp.cov(coords, aRange = 1) fit5 = vecchia_cov(Sigma, coords, n.neighbors = 5, KLdiv = TRUE) fit5$KLdiv #> [1] 1086.299 fit10 = vecchia_cov(Sigma, coords, n.neighbors = 10, KLdiv = TRUE) fit10$KLdiv #> [1] 922.9651"}]
